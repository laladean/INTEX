// <auto-generated />
using System;
using INTEX.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace INTEX.Migrations
{
    [DbContext(typeof(intex2Context))]
    [Migration("20230413021514_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("INTEX.Models.analysis", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("analysisid")
                        .HasColumnType("integer");

                    b.Property<int?>("analysistype")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("doneby")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("analysis");
                });

            modelBuilder.Entity("INTEX.Models.analysistextile", b =>
                {
                    b.Property<long>("mainanalysisid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("mainanalysisid", "maintextileid");

                    b.ToTable("analysistextile");
                });

            modelBuilder.Entity("INTEX.Models.artifactfagelgamousregister", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("coordinateset")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("photographed")
                        .HasColumnType("text");

                    b.Property<string>("registernum")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("artifactfagelgamousregister");
                });

            modelBuilder.Entity("INTEX.Models.artifactfagelgamousregisterburialmain", b =>
                {
                    b.Property<long>("mainartifactfagelgamousregisterid")
                        .HasColumnType("bigint");

                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.HasKey("mainartifactfagelgamousregisterid", "mainburialmainid");

                    b.ToTable("artifactfagelgamousregisterburialmain");
                });

            modelBuilder.Entity("INTEX.Models.artifactkomaushimregister", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("currentlocation")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("dimensions")
                        .HasColumnType("text");

                    b.Property<DateTime?>("entrydate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("excavatornum")
                        .HasColumnType("text");

                    b.Property<string>("finder")
                        .HasColumnType("text");

                    b.Property<string>("material")
                        .HasColumnType("text");

                    b.Property<string>("number")
                        .HasColumnType("text");

                    b.Property<string>("photos")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<string>("provenance")
                        .HasColumnType("text");

                    b.Property<string>("qualityphotos")
                        .HasColumnType("text");

                    b.Property<string>("rehousedto")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("artifactkomaushimregister");
                });

            modelBuilder.Entity("INTEX.Models.artifactkomaushimregisterburialmain", b =>
                {
                    b.Property<long>("mainartifactkomaushimregisterid")
                        .HasColumnType("bigint");

                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.HasKey("mainartifactkomaushimregisterid", "mainburialmainid");

                    b.ToTable("artifactkomaushimregisterburialmain");
                });

            modelBuilder.Entity("INTEX.Models.biological", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("bagnumber")
                        .HasColumnType("integer");

                    b.Property<int?>("clusternumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("initials")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("previouslysampled")
                        .HasColumnType("text");

                    b.Property<int?>("racknumber")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("biological");
                });

            modelBuilder.Entity("INTEX.Models.biologicalc14", b =>
                {
                    b.Property<long>("mainbiologicalid")
                        .HasColumnType("bigint");

                    b.Property<long>("mainc14id")
                        .HasColumnType("bigint");

                    b.HasKey("mainbiologicalid", "mainc14id");

                    b.ToTable("biologicalc14");
                });

            modelBuilder.Entity("INTEX.Models.bodyanalysischart", b =>
                {
                    b.Property<string>("squarenorthsouth")
                        .HasColumnType("text");

                    b.Property<string>("area")
                        .HasColumnType("text");

                    b.Property<int>("burialnumber")
                        .HasColumnType("integer");

                    b.Property<string>("cariesperiodontaldisease")
                        .HasColumnType("text");

                    b.Property<string>("dateofexamination")
                        .HasColumnType("text");

                    b.Property<string>("eastwest")
                        .HasColumnType("text");

                    b.Property<string>("femur")
                        .HasColumnType("text");

                    b.Property<string>("femurheaddiameter")
                        .HasColumnType("text");

                    b.Property<decimal?>("femurlength")
                        .HasColumnType("numeric");

                    b.Property<string>("gonion")
                        .HasColumnType("text");

                    b.Property<string>("haircolor")
                        .HasColumnType("text");

                    b.Property<string>("humerus")
                        .HasColumnType("text");

                    b.Property<string>("humerusheaddiameter")
                        .HasColumnType("text");

                    b.Property<decimal?>("humeruslength")
                        .HasColumnType("numeric");

                    b.Property<string>("lamboidsuture")
                        .HasColumnType("text");

                    b.Property<string>("medialipramus")
                        .HasColumnType("text");

                    b.Property<string>("northsouth")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("nuchalcrest")
                        .HasColumnType("text");

                    b.Property<string>("observations")
                        .HasColumnType("text");

                    b.Property<string>("orbitedge")
                        .HasColumnType("text");

                    b.Property<string>("osteophytosis")
                        .HasColumnType("text");

                    b.Property<string>("parietalbossing")
                        .HasColumnType("text");

                    b.Property<int?>("preservationindex")
                        .HasColumnType("integer");

                    b.Property<string>("pubicbone")
                        .HasColumnType("text");

                    b.Property<string>("robust")
                        .HasColumnType("text");

                    b.Property<string>("sciaticnotch")
                        .HasColumnType("text");

                    b.Property<string>("sphenooccipitalsynchondrosis")
                        .HasColumnType("text");

                    b.Property<string>("squamossuture")
                        .HasColumnType("text");

                    b.Property<string>("squareeastwest")
                        .HasColumnType("text");

                    b.Property<string>("subpubicangle")
                        .HasColumnType("text");

                    b.Property<string>("supraorbitalridges")
                        .HasColumnType("text");

                    b.Property<string>("toothattrition")
                        .HasColumnType("text");

                    b.Property<string>("tootheruption")
                        .HasColumnType("text");

                    b.Property<string>("tootheruptionageestimate")
                        .HasColumnType("text");

                    b.Property<string>("ventralarc")
                        .HasColumnType("text");

                    b.Property<string>("zygomaticcrest")
                        .HasColumnType("text");

                    b.HasKey("squarenorthsouth");

                    b.ToTable("bodyanalysischart");
                });

            modelBuilder.Entity("INTEX.Models.books", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("author")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("link")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("books");
                });

            modelBuilder.Entity("INTEX.Models.burialmain", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adultsubadult")
                        .HasColumnType("text");

                    b.Property<string>("ageatdeath")
                        .HasColumnType("text");

                    b.Property<string>("area")
                        .HasColumnType("text");

                    b.Property<long?>("burialid")
                        .HasColumnType("bigint");

                    b.Property<string>("burialmaterials")
                        .HasColumnType("text");

                    b.Property<string>("burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("clusternumber")
                        .HasColumnType("text");

                    b.Property<string>("dataexpertinitials")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dateofexcavation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("depth")
                        .HasColumnType("text");

                    b.Property<string>("eastwest")
                        .HasColumnType("text");

                    b.Property<string>("excavationrecorder")
                        .HasColumnType("text");

                    b.Property<string>("facebundles")
                        .HasColumnType("text");

                    b.Property<string>("fieldbookexcavationyear")
                        .HasColumnType("text");

                    b.Property<string>("fieldbookpage")
                        .HasColumnType("text");

                    b.Property<string>("goods")
                        .HasColumnType("text");

                    b.Property<string>("hair")
                        .HasColumnType("text");

                    b.Property<string>("haircolor")
                        .HasColumnType("text");

                    b.Property<string>("headdirection")
                        .HasColumnType("text");

                    b.Property<string>("length")
                        .HasColumnType("text");

                    b.Property<string>("northsouth")
                        .HasColumnType("text");

                    b.Property<string>("photos")
                        .HasColumnType("text");

                    b.Property<string>("preservation")
                        .HasColumnType("text");

                    b.Property<string>("samplescollected")
                        .HasColumnType("text");

                    b.Property<string>("sex")
                        .HasColumnType("text");

                    b.Property<string>("shaftnumber")
                        .HasColumnType("text");

                    b.Property<string>("southtofeet")
                        .HasColumnType("text");

                    b.Property<string>("southtohead")
                        .HasColumnType("text");

                    b.Property<string>("squareeastwest")
                        .HasColumnType("text");

                    b.Property<string>("squarenorthsouth")
                        .HasColumnType("text");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("westtofeet")
                        .HasColumnType("text");

                    b.Property<string>("westtohead")
                        .HasColumnType("text");

                    b.Property<string>("wrapping")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("burialmain");
                });

            modelBuilder.Entity("INTEX.Models.burialmainbiological", b =>
                {
                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("mainbiologicalid")
                        .HasColumnType("bigint");

                    b.HasKey("mainburialmainid", "mainbiologicalid");

                    b.ToTable("burialmainbiological");
                });

            modelBuilder.Entity("INTEX.Models.burialmainbodyanalysischart", b =>
                {
                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("mainbodyanalysischartid")
                        .HasColumnType("bigint");

                    b.HasKey("mainburialmainid", "mainbodyanalysischartid");

                    b.ToTable("burialmainbodyanalysischart");
                });

            modelBuilder.Entity("INTEX.Models.burialmaincranium", b =>
                {
                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("maincraniumid")
                        .HasColumnType("bigint");

                    b.HasKey("mainburialmainid", "maincraniumid");

                    b.ToTable("burialmaincranium");
                });

            modelBuilder.Entity("INTEX.Models.burialmaintextile", b =>
                {
                    b.Property<long>("mainburialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("mainburialmainid", "maintextileid");

                    b.ToTable("burialmaintextile");
                });

            modelBuilder.Entity("INTEX.Models.c14", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("agebp")
                        .HasColumnType("integer");

                    b.Property<string>("c14lab")
                        .HasColumnType("text");

                    b.Property<int?>("calendardate")
                        .HasColumnType("integer");

                    b.Property<int?>("calibrateddateavg")
                        .HasColumnType("integer");

                    b.Property<int?>("calibrateddatemax")
                        .HasColumnType("integer");

                    b.Property<int?>("calibrateddatemin")
                        .HasColumnType("integer");

                    b.Property<int?>("calibratedspan")
                        .HasColumnType("integer");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("foci")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<string>("questions")
                        .HasColumnType("text");

                    b.Property<int?>("rack")
                        .HasColumnType("integer");

                    b.Property<int?>("size")
                        .HasColumnType("integer");

                    b.Property<int?>("tubenumber")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("c14");
                });

            modelBuilder.Entity("INTEX.Models.color", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("colorid")
                        .HasColumnType("integer");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("color");
                });

            modelBuilder.Entity("INTEX.Models.colortextile", b =>
                {
                    b.Property<long>("maincolorid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("maincolorid", "maintextileid");

                    b.ToTable("colortextile");
                });

            modelBuilder.Entity("INTEX.Models.cranium", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("alphacore")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("basionbregmaheight")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("basionnasion")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("basionprosthionlength")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("bizygomaticdiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("interobitalbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("interorbitalbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("interorbitalsubtense")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("maxcraniumbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("maxcraniumlength")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("maxnasalbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("midorbitalbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("midorbitalsubtense")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("nasionprosthionupper")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("nasoalphasubtense")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.ToTable("cranium");
                });

            modelBuilder.Entity("INTEX.Models.decoration", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("decorationid")
                        .HasColumnType("integer");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("decoration");
                });

            modelBuilder.Entity("INTEX.Models.decorationtextile", b =>
                {
                    b.Property<long>("maindecorationid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("maindecorationid", "maintextileid");

                    b.ToTable("decorationtextile");
                });

            modelBuilder.Entity("INTEX.Models.dimension", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("dimensionid")
                        .HasColumnType("integer");

                    b.Property<string>("dimensiontype")
                        .HasColumnType("text");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("dimension");
                });

            modelBuilder.Entity("INTEX.Models.dimensiontextile", b =>
                {
                    b.Property<long>("maindimensionid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("maindimensionid", "maintextileid");

                    b.ToTable("dimensiontextile");
                });

            modelBuilder.Entity("INTEX.Models.newsarticle", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("author")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<string>("url")
                        .HasColumnType("text");

                    b.Property<string>("urltoimage")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("newsarticle");
                });

            modelBuilder.Entity("INTEX.Models.photodata", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("filename")
                        .HasColumnType("text");

                    b.Property<int?>("photodataid")
                        .HasColumnType("integer");

                    b.Property<string>("url")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("photodata");
                });

            modelBuilder.Entity("INTEX.Models.photodatatextile", b =>
                {
                    b.Property<long>("mainphotodataid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("mainphotodataid", "maintextileid");

                    b.ToTable("photodatatextile");
                });

            modelBuilder.Entity("INTEX.Models.photoform", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("area")
                        .HasColumnType("text");

                    b.Property<string>("burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("eastwest")
                        .HasColumnType("text");

                    b.Property<string>("filename")
                        .HasColumnType("text");

                    b.Property<string>("northsouth")
                        .HasColumnType("text");

                    b.Property<DateTime?>("photodate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("photographer")
                        .HasColumnType("text");

                    b.Property<string>("squareeastwest")
                        .HasColumnType("text");

                    b.Property<string>("squarenorthsouth")
                        .HasColumnType("text");

                    b.Property<string>("tableassociation")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("photoform");
                });

            modelBuilder.Entity("INTEX.Models.structure", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("structureid")
                        .HasColumnType("integer");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("structure");
                });

            modelBuilder.Entity("INTEX.Models.structuretextile", b =>
                {
                    b.Property<long>("mainstructureid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("mainstructureid", "maintextileid");

                    b.ToTable("structuretextile");
                });

            modelBuilder.Entity("INTEX.Models.teammember", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("bio")
                        .HasColumnType("text");

                    b.Property<string>("membername")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("teammember");
                });

            modelBuilder.Entity("INTEX.Models.textile", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("direction")
                        .HasColumnType("text");

                    b.Property<string>("estimatedperiod")
                        .HasColumnType("text");

                    b.Property<string>("locale")
                        .HasColumnType("text");

                    b.Property<DateTime?>("photographeddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("sampledate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("textileid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("textile");
                });

            modelBuilder.Entity("INTEX.Models.textilefunction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("textilefunctionid")
                        .HasColumnType("integer");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("textilefunction");
                });

            modelBuilder.Entity("INTEX.Models.textilefunctiontextile", b =>
                {
                    b.Property<long>("maintextilefunctionid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("maintextilefunctionid", "maintextileid");

                    b.ToTable("textilefunctiontextile");
                });

            modelBuilder.Entity("INTEX.Models.yarnmanipulation", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Pply")
                        .HasColumnType("text");

                    b.Property<string>("angle")
                        .HasColumnType("text");

                    b.Property<string>("component")
                        .HasColumnType("text");

                    b.Property<string>("count")
                        .HasColumnType("text");

                    b.Property<string>("direction")
                        .HasColumnType("text");

                    b.Property<string>("manipulation")
                        .HasColumnType("text");

                    b.Property<string>("material")
                        .HasColumnType("text");

                    b.Property<string>("thickness")
                        .HasColumnType("text");

                    b.Property<int?>("yarnmanipulationid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("yarnmanipulation");
                });

            modelBuilder.Entity("INTEX.Models.yarnmanipulationtextile", b =>
                {
                    b.Property<long>("mainyarnmanipulationid")
                        .HasColumnType("bigint");

                    b.Property<long>("maintextileid")
                        .HasColumnType("bigint");

                    b.HasKey("mainyarnmanipulationid", "maintextileid");

                    b.ToTable("yarnmanipulationtextile");
                });
#pragma warning restore 612, 618
        }
    }
}
